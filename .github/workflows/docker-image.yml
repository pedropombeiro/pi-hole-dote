name: Docker Image CI

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:

  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}
          images: |
            pombeirp/pihole-dote
            ghcr.io/${{ github.actor }}/pihole-dote
          tags: |
            type=match,pattern=v(\d+.\d+.\d+),group=1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Setting up Docker Buildx with docker-container driver is required
      # at the moment to be able to use a subdirectory with Git context
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName
        with:
          tagRegex: "v(?<version>.*)"

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./src/
          platforms: linux/arm64
          push: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
          build-args: |
            PIHOLE_DOCKER_TAG=${{ steps.tagName.outputs.version }}
            DOTE_ARCH=arm64
          tags: ${{ steps.meta.outputs.tags }}

      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: pombeirp/pihole-dote
